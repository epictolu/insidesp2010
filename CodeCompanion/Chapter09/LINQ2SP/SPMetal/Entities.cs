//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;



public partial class Entities : Microsoft.SharePoint.Linq.DataContext {
	
	#region Extensibility Method Definitions
	partial void OnCreated();
	#endregion
	
	public Entities(string requestUrl) : 
			base(requestUrl) {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Instructors")]
	public Microsoft.SharePoint.Linq.EntityList<Instructor> Instructors {
		get {
			return this.GetList<Instructor>("Instructors");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Modules")]
	public Microsoft.SharePoint.Linq.EntityList<ModulesItem> Modules {
		get {
			return this.GetList<ModulesItem>("Modules");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Contact))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ModulesItem))]
public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
	
	private System.Nullable<int> _id;
	
	private System.Nullable<int> _version;
	
	private string _path;
	
	private Microsoft.SharePoint.Linq.EntityState _entityState;
	
	private System.Collections.Generic.IDictionary<string, object> _originalValues;
	
	private string _title;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion

	Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
		get {
			return this._entityState;
		}
		set {
			if ((value != this._entityState)) {
				this._entityState = value;
			}
		}
	}

	System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
		get {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			return this._originalValues;
		}
	}
	
	public Item() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
	public System.Nullable<int> Id {
		get {
			return this._id;
		}
		set {
			if ((value != this._id)) {
				this.OnPropertyChanging("Id", this._id);
				this._id = value;
				this.OnPropertyChanged("Id");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
	public System.Nullable<int> Version {
		get {
			return this._version;
		}
		set {
			if ((value != this._version)) {
				this.OnPropertyChanging("Version", this._version);
				this._version = value;
				this.OnPropertyChanged("Version");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
	public string Path {
		get {
			return this._path;
		}
		set {
			if ((value != this._path)) {
				this.OnPropertyChanging("Path", this._path);
				this._path = value;
				this.OnPropertyChanged("Path");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
	public virtual string Title {
		get {
			return this._title;
		}
		set {
			if ((value != this._title)) {
				this.OnPropertyChanging("Title", this._title);
				this._title = value;
				this.OnPropertyChanged("Title");
			}
		}
	}
	
	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
	
	public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
	
	protected virtual void OnPropertyChanged(string propertyName) {
		if ((null != this.PropertyChanged)) {
			this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
		}
	}
	
	protected virtual void OnPropertyChanging(string propertyName, object value) {
		if ((null == this._originalValues)) {
			this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
		}
		if ((false == this._originalValues.ContainsKey(propertyName))) {
			this._originalValues.Add(propertyName, value);
		}
		if ((null != this.PropertyChanging)) {
			this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
		}
	}
}

/// <summary>
/// Store information about a business or personal contact.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Contact", Id="0x0106")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Instructor))]
public partial class Contact : Item {
	
	private string _lastName;
	
	private string _lastName0;
	
	private string _firstName;
	
	private string _fullName;
	
	private string _eMail;
	
	private string _company;
	
	private string _jobTitle;
	
	private string _businessPhone;
	
	private string _homePhone;
	
	private string _mobileNumber;
	
	private string _faxNumber;
	
	private string _address;
	
	private string _city;
	
	private string _stateProvince;
	
	private string _zIPPostalCode;
	
	private string _countryRegion;
	
	private string _webPage;
	
	private string _comments;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public Contact() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_lastName", ReadOnly=true, FieldType="Computed")]
	public virtual string LastName {
		get {
			return this._lastName;
		}
		set {
			if ((value != this._lastName)) {
				this.OnPropertyChanging("LastName", this._lastName);
				this._lastName = value;
				this.OnPropertyChanged("LastName");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitleNoMenu", Storage="_lastName0", ReadOnly=true, FieldType="Computed")]
	public virtual string LastName0 {
		get {
			return this._lastName0;
		}
		set {
			if ((value != this._lastName0)) {
				this.OnPropertyChanging("LastName0", this._lastName0);
				this._lastName0 = value;
				this.OnPropertyChanged("LastName0");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FirstName", Storage="_firstName", FieldType="Text")]
	public virtual string FirstName {
		get {
			return this._firstName;
		}
		set {
			if ((value != this._firstName)) {
				this.OnPropertyChanging("FirstName", this._firstName);
				this._firstName = value;
				this.OnPropertyChanged("FirstName");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FullName", Storage="_fullName", FieldType="Text")]
	public string FullName {
		get {
			return this._fullName;
		}
		set {
			if ((value != this._fullName)) {
				this.OnPropertyChanging("FullName", this._fullName);
				this._fullName = value;
				this.OnPropertyChanged("FullName");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_eMail", FieldType="Text")]
	public virtual string EMail {
		get {
			return this._eMail;
		}
		set {
			if ((value != this._eMail)) {
				this.OnPropertyChanging("EMail", this._eMail);
				this._eMail = value;
				this.OnPropertyChanged("EMail");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Company", Storage="_company", FieldType="Text")]
	public virtual string Company {
		get {
			return this._company;
		}
		set {
			if ((value != this._company)) {
				this.OnPropertyChanging("Company", this._company);
				this._company = value;
				this.OnPropertyChanged("Company");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JobTitle", Storage="_jobTitle", FieldType="Text")]
	public virtual string JobTitle {
		get {
			return this._jobTitle;
		}
		set {
			if ((value != this._jobTitle)) {
				this.OnPropertyChanging("JobTitle", this._jobTitle);
				this._jobTitle = value;
				this.OnPropertyChanged("JobTitle");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_businessPhone", FieldType="Text")]
	public virtual string BusinessPhone {
		get {
			return this._businessPhone;
		}
		set {
			if ((value != this._businessPhone)) {
				this.OnPropertyChanging("BusinessPhone", this._businessPhone);
				this._businessPhone = value;
				this.OnPropertyChanged("BusinessPhone");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HomePhone", Storage="_homePhone", FieldType="Text")]
	public virtual string HomePhone {
		get {
			return this._homePhone;
		}
		set {
			if ((value != this._homePhone)) {
				this.OnPropertyChanging("HomePhone", this._homePhone);
				this._homePhone = value;
				this.OnPropertyChanged("HomePhone");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_mobileNumber", FieldType="Text")]
	public virtual string MobileNumber {
		get {
			return this._mobileNumber;
		}
		set {
			if ((value != this._mobileNumber)) {
				this.OnPropertyChanging("MobileNumber", this._mobileNumber);
				this._mobileNumber = value;
				this.OnPropertyChanged("MobileNumber");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkFax", Storage="_faxNumber", FieldType="Text")]
	public virtual string FaxNumber {
		get {
			return this._faxNumber;
		}
		set {
			if ((value != this._faxNumber)) {
				this.OnPropertyChanging("FaxNumber", this._faxNumber);
				this._faxNumber = value;
				this.OnPropertyChanged("FaxNumber");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkAddress", Storage="_address", FieldType="Note")]
	public virtual string Address {
		get {
			return this._address;
		}
		set {
			if ((value != this._address)) {
				this.OnPropertyChanging("Address", this._address);
				this._address = value;
				this.OnPropertyChanged("Address");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_city", FieldType="Text")]
	public virtual string City {
		get {
			return this._city;
		}
		set {
			if ((value != this._city)) {
				this.OnPropertyChanging("City", this._city);
				this._city = value;
				this.OnPropertyChanged("City");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkState", Storage="_stateProvince", FieldType="Text")]
	public virtual string StateProvince {
		get {
			return this._stateProvince;
		}
		set {
			if ((value != this._stateProvince)) {
				this.OnPropertyChanging("StateProvince", this._stateProvince);
				this._stateProvince = value;
				this.OnPropertyChanged("StateProvince");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_zIPPostalCode", FieldType="Text")]
	public virtual string ZIPPostalCode {
		get {
			return this._zIPPostalCode;
		}
		set {
			if ((value != this._zIPPostalCode)) {
				this.OnPropertyChanging("ZIPPostalCode", this._zIPPostalCode);
				this._zIPPostalCode = value;
				this.OnPropertyChanged("ZIPPostalCode");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_countryRegion", FieldType="Text")]
	public virtual string CountryRegion {
		get {
			return this._countryRegion;
		}
		set {
			if ((value != this._countryRegion)) {
				this.OnPropertyChanging("CountryRegion", this._countryRegion);
				this._countryRegion = value;
				this.OnPropertyChanged("CountryRegion");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WebPage", Storage="_webPage", FieldType="Url")]
	public virtual string WebPage {
		get {
			return this._webPage;
		}
		set {
			if ((value != this._webPage)) {
				this.OnPropertyChanging("WebPage", this._webPage);
				this._webPage = value;
				this.OnPropertyChanged("WebPage");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
	public virtual string Comments {
		get {
			return this._comments;
		}
		set {
			if ((value != this._comments)) {
				this.OnPropertyChanging("Comments", this._comments);
				this._comments = value;
				this.OnPropertyChanged("Comments");
			}
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Modules")]
public partial class ModulesItem : Item {
	
	private System.Nullable<double> _moduleID;
	
	private Microsoft.SharePoint.Linq.EntityRef<Instructor> _instructor;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public ModulesItem() {
		this._instructor = new Microsoft.SharePoint.Linq.EntityRef<Instructor>();
		this._instructor.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Instructor>>(this.OnInstructorSync);
		this._instructor.OnChanged += new System.EventHandler(this.OnInstructorChanged);
		this._instructor.OnChanging += new System.EventHandler(this.OnInstructorChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ModuleID", Storage="_moduleID", Required=true, FieldType="Number")]
	public System.Nullable<double> ModuleID {
		get {
			return this._moduleID;
		}
		set {
			if ((value != this._moduleID)) {
				this.OnPropertyChanging("ModuleID", this._moduleID);
				this._moduleID = value;
				this.OnPropertyChanged("ModuleID");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Instructor", Storage="_instructor", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Instructors")]
	public Instructor Instructor {
		get {
			return this._instructor.GetEntity();
		}
		set {
			this._instructor.SetEntity(value);
		}
	}
	
	private void OnInstructorChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Instructor", this._instructor.Clone());
	}
	
	private void OnInstructorChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Instructor");
	}
	
	private void OnInstructorSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Instructor> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ModulesItem.Add(this);
		}
		else {
			e.Item.ModulesItem.Remove(this);
		}
	}
}

/// <summary>
/// Store information about a business or personal contact.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Contact", Id="0x0106", List="Instructors")]
public partial class Instructor : Contact {
	
	private Microsoft.SharePoint.Linq.EntitySet<ModulesItem> _modulesItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public Instructor() {
		this._modulesItem = new Microsoft.SharePoint.Linq.EntitySet<ModulesItem>();
		this._modulesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ModulesItem>>(this.OnModulesItemSync);
		this._modulesItem.OnChanged += new System.EventHandler(this.OnModulesItemChanged);
		this._modulesItem.OnChanging += new System.EventHandler(this.OnModulesItemChanging);
		this.OnCreated();
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string LastName {
		get {
			throw new System.InvalidOperationException("Field LinkTitle was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field LinkTitle was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string LastName0 {
		get {
			throw new System.InvalidOperationException("Field LinkTitleNoMenu was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field LinkTitleNoMenu was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string FirstName {
		get {
			throw new System.InvalidOperationException("Field FirstName was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field FirstName was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string EMail {
		get {
			throw new System.InvalidOperationException("Field EMail was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field EMail was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Company {
		get {
			throw new System.InvalidOperationException("Field Company was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field Company was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string JobTitle {
		get {
			throw new System.InvalidOperationException("Field JobTitle was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field JobTitle was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string BusinessPhone {
		get {
			throw new System.InvalidOperationException("Field WorkPhone was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkPhone was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string HomePhone {
		get {
			throw new System.InvalidOperationException("Field HomePhone was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field HomePhone was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string MobileNumber {
		get {
			throw new System.InvalidOperationException("Field CellPhone was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field CellPhone was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string FaxNumber {
		get {
			throw new System.InvalidOperationException("Field WorkFax was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkFax was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Address {
		get {
			throw new System.InvalidOperationException("Field WorkAddress was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkAddress was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string City {
		get {
			throw new System.InvalidOperationException("Field WorkCity was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkCity was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string StateProvince {
		get {
			throw new System.InvalidOperationException("Field WorkState was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkState was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string ZIPPostalCode {
		get {
			throw new System.InvalidOperationException("Field WorkZip was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkZip was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string CountryRegion {
		get {
			throw new System.InvalidOperationException("Field WorkCountry was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WorkCountry was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string WebPage {
		get {
			throw new System.InvalidOperationException("Field WebPage was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field WebPage was removed from content type Contact.");
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Comments {
		get {
			throw new System.InvalidOperationException("Field Comments was removed from content type Contact.");
		}
		set {
			throw new System.InvalidOperationException("Field Comments was removed from content type Contact.");
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Instructor", Storage="_modulesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Modules")]
	public Microsoft.SharePoint.Linq.EntitySet<ModulesItem> ModulesItem {
		get {
			return this._modulesItem;
		}
		set {
			this._modulesItem.Assign(value);
		}
	}
	
	private void OnModulesItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ModulesItem", this._modulesItem.Clone());
	}
	
	private void OnModulesItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ModulesItem");
	}
	
	private void OnModulesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ModulesItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Instructor = this;
		}
		else {
			e.Item.Instructor = null;
		}
	}
}
